name: Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 180

    env:
      ANDROIDSDK_ROOT: $HOME/.buildozer/android/platform/android-sdk
      ANDROID_NDK_HOME: $HOME/.buildozer/android/platform/android-ndk-r25b

    steps:
      - uses: actions/checkout@v4

      - name: Get date
        run: echo "date=$(date -u '+%Y%m%d')" >> $GITHUB_ENV
        shell: bash

      - name: Cache ~/.buildozer
        uses: actions/cache@v4
        with:
          path: ~/.buildozer
          key: buildozer-global-${{ runner.os }}-${{ github.run_id }}-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            buildozer-global-${{ runner.os }}-

      - name: Cache ./.buildozer
        uses: actions/cache@v4
        with:
          path: ./.buildozer
          key: ${{ runner.os }}-buildozer-${{ github.run_id }}-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-

      - name: Cache Android SDK
        uses: actions/cache@v4
        with:
          path: ~/.buildozer/android/platform/android-sdk
          key: ${{ runner.os }}-android-sdk-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-android-sdk-

      - name: Cache Android NDK
        uses: actions/cache@v4
        with:
          path: ~/.buildozer/android/platform/android-ndk-r25b
          key: ${{ runner.os }}-android-ndk-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-android-ndk-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential git ffmpeg \
            libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev \
            libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev libunwind-dev \
            zlib1g-dev libsqlite3-dev sqlite3 bzip2 libbz2-dev openssl \
            libgdbm-dev libgdbm-compat-dev liblzma-dev libreadline-dev uuid-dev \
            libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev \
            zip unzip pkg-config \
            autoconf automake libtool libtool-bin gettext gettext-base autopoint \
            gstreamer1.0-plugins-base gstreamer1.0-plugins-good

      - name: Verify gettext tools installation
        run: |
          echo "which autopoint: $(which autopoint)"
          echo "autopoint version: $(autopoint --version | head -1)"
          echo "which gettext: $(which gettext)"

      - name: Setup Java 17 (required by Gradle)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install pip tools
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install cython==0.29.33 buildozer
          # optional: install plyer if your app uses it
          python -m pip install git+https://github.com/kivy/plyer.git || true

      - name: Create swap (avoid OOM during native builds)
        run: |
          sudo fallocate -l 4G /swapfile || sudo dd if=/dev/zero of=/swapfile bs=1M count=4096
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile

      - name: Show buildozer & system info
        run: |
          buildozer --version || true
          uname -a
          java -version || true

      - name: Build with Buildozer (debug)
        id: buildozer
        run: |
          # Accept all prompts automatically and build debug APK
          yes | buildozer -v android debug

      - name: Upload APK / AAB
        uses: actions/upload-artifact@v4
        with:
          name: android-package
          path: |
            bin/*.apk
            bin/*.aab
          retention-days: 3
