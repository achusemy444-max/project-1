name: Android APK

on:
  push:
    branches: [ "**" ]
    tags: [ "**" ]
  pull_request:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip python3-setuptools git zip unzip wget

      - name: Install Android commandline tools (root-safe)
        run: |
          set -e
          TMPDIR="$(mktemp -d)"
          cd "$TMPDIR"
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdtools.zip
          sudo mkdir -p /usr/local/lib/android
          sudo unzip -q -o cmdtools.zip -d /usr/local/lib/android/cmdline-tools
          sudo mkdir -p /usr/local/lib/android/cmdline-tools/latest
          if [ -d /usr/local/lib/android/cmdline-tools/cmdline-tools ]; then
            sudo mv -f /usr/local/lib/android/cmdline-tools/cmdline-tools/* /usr/local/lib/android/cmdline-tools/latest/ || true
            sudo rm -rf /usr/local/lib/android/cmdline-tools/cmdline-tools
          fi
          echo "ANDROID_SDK_ROOT=/usr/local/lib/android" >> $GITHUB_ENV
          echo "ANDROID_HOME=/usr/local/lib/android" >> $GITHUB_ENV
          echo "/usr/local/lib/android/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "/usr/local/lib/android/platform-tools" >> $GITHUB_PATH

      - name: Accept SDK licenses (non-interactive)
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android
        run: |
          # Run license acceptance multiple times to cover all packages
          yes | sdkmanager --licenses || true
          yes | sdkmanager --licenses || true

      - name: Install SDK packages
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android
        run: |
          set -e
          # Update and retry pattern ensures mirrors do not cause failures
          sdkmanager --update || true
          yes | sdkmanager --install "platform-tools" || true
          yes | sdkmanager --install "platforms;android-33" || true
          yes | sdkmanager --install "build-tools;34.0.0" || true
          # Verify installations
          test -d "$ANDROID_SDK_ROOT/platforms/android-33" && ls -la "$ANDROID_SDK_ROOT/platforms/android-33" || (echo "Platform 33 missing" && exit 1)
          test -x "$ANDROID_SDK_ROOT/build-tools/34.0.0/aidl" && ls -la "$ANDROID_SDK_ROOT/build-tools/34.0.0/aidl" || (echo "Build-Tools 34.0.0 missing" && exit 1)

      - name: Install Buildozer and Cython
        run: |
          python3 -m pip install --upgrade pip
          pip3 install --user --upgrade cython virtualenv buildozer
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Build APK with Buildozer
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android
        run: |
          export PATH=$PATH:$HOME/.local/bin
          buildozer -v android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: shc-tseminyu-apk
          path: bin/*.apk
