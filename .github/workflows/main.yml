name: Android APK

on:
  push:
    branches: [ "**" ]
    tags: [ "**" ]
  pull_request:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip python3-setuptools git zip unzip wget

      - name: Install Android commandline tools (root-safe)
        run: |
          set -e
          TMPDIR="$(mktemp -d)"
          cd "$TMPDIR"
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdtools.zip
          sudo mkdir -p /usr/local/lib/android
          sudo unzip -q -o cmdtools.zip -d /usr/local/lib/android/cmdline-tools
          sudo mkdir -p /usr/local/lib/android/cmdline-tools/latest
          if [ -d /usr/local/lib/android/cmdline-tools/cmdline-tools ]; then
            sudo mv -f /usr/local/lib/android/cmdline-tools/cmdline-tools/* /usr/local/lib/android/cmdline-tools/latest/ || true
            sudo rm -rf /usr/local/lib/android/cmdline-tools/cmdline-tools
          fi
          echo "ANDROID_SDK_ROOT=/usr/local/lib/android" >> $GITHUB_ENV
          echo "ANDROID_HOME=/usr/local/lib/android" >> $GITHUB_ENV
          echo "/usr/local/lib/android/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "/usr/local/lib/android/platform-tools" >> $GITHUB_PATH

      - name: Normalize SDK layout and permissions
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android
        run: |
          set -e
          # If a nested .../sdk directory exists, move its contents up one level.
          if [ -d "$ANDROID_SDK_ROOT/sdk" ]; then
            echo "Normalizing nested SDK folder..."
            sudo rsync -a "$ANDROID_SDK_ROOT/sdk/" "$ANDROID_SDK_ROOT/"
            sudo rm -rf "$ANDROID_SDK_ROOT/sdk"
          fi
          # Ensure expected top-level directories exist and are writable
          sudo mkdir -p "$ANDROID_SDK_ROOT/platforms" "$ANDROID_SDK_ROOT/build-tools" "$ANDROID_SDK_ROOT/platform-tools" "$ANDROID_SDK_ROOT/licenses"
          # Give write access to the runner user for all SDK content
          sudo chown -R $USER:$USER "$ANDROID_SDK_ROOT"

      - name: Pre-seed Android SDK licenses (non-interactive)
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android
        run: |
          mkdir -p "$ANDROID_SDK_ROOT/licenses"
          # Common Google Android SDK license hashes
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > "$ANDROID_SDK_ROOT/licenses/android-sdk-license"
          echo "d56f5187479451eabf01fb78af6dfcb131a6481e" > "$ANDROID_SDK_ROOT/licenses/android-sdk-preview-license"

      - name: Accept SDK licenses (double pass)
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android
        run: |
          yes | sdkmanager --licenses || true
          yes | sdkmanager --licenses || true

      - name: Install SDK packages (with verification)
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android
        shell: bash
        run: |
          set -e
          pkgtxt="$(mktemp)"
          printf "platform-tools\nplatforms;android-33\nbuild-tools;34.0.0\n" > "$pkgtxt"
          sdkmanager --package_file="$pkgtxt" || true
          sdkmanager --update || true
          yes | sdkmanager --licenses || true
          sdkmanager --package_file="$pkgtxt"
          # Verify and fix any inconsistent subfolder remnants again
          if [ -d "$ANDROID_SDK_ROOT/sdk" ]; then
            rsync -a "$ANDROID_SDK_ROOT/sdk/" "$ANDROID_SDK_ROOT/"
            rm -rf "$ANDROID_SDK_ROOT/sdk"
          fi
          # Final verification
          [ -d "$ANDROID_SDK_ROOT/platforms/android-33" ] || (echo "Platform 33 missing after install" >&2; exit 1)
          [ -x "$ANDROID_SDK_ROOT/build-tools/34.0.0/aidl" ] || (echo "Build-Tools 34.0.0 missing after install" >&2; exit 1)

      - name: Install Buildozer and Cython
        run: |
          python3 -m pip install --upgrade pip
          pip3 install --user --upgrade cython virtualenv buildozer
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Build APK with Buildozer
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android
        run: |
          export PATH=$PATH:$HOME/.local/bin
          buildozer -v android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: shc-tseminyu-apk
          path: bin/*.apk
